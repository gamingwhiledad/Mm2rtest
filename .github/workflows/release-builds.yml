name: Release Builds
on:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        dotnet: ['5.0.x']
    name: Dotnet ${{ matrix.dotnet }} - ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - run: dotnet build MM2Randomizer.sln
      - run: dotnet test MM2Randomizer.sln
      - run: |
          dotnet publish --runtime osx-x64 --configuration Release -o MegaMan2Randomizer2
          zip -r MegaMan2Randomizer2-osx-64.zip MegaMan2Randomizer2
          rm -rf MegaMan2Randomizer2
      - run: |
          dotnet publish --runtime linux-x64 --configuration Release -o MegaMan2Randomizer2
          zip -r MegaMan2Randomizer2-linux-x64.zip MegaMan2Randomizer2
          rm -rf MegaMan2Randomizer2
      - run: |
          dotnet publish --runtime win-x64 --configuration Release -o MegaMan2Randomizer2
          zip -r MegaMan2Randomizer2-win-x64.zip MegaMan2Randomizer2
      - run: |
          dotnet tool install --global aver
          aver MegaMan2Randomizer2/RandomizerHost -a | cut -d ' ' -f 2 > version.txt
      - id: version
        run: |
          echo "::set-output name=name::$(echo $(basename ${GITHUB_REF}) | sed -e 's/master/Release')"
          echo "::set-output name=number::$(cat version.txt)"
      - name: Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: ${{ github.ref != 'refs/heads/master' }}
          title: ${{ steps.version.outputs.name }} ${{ steps.version.outputs.number }}
          files: |
            MegaMan2Randomizer2-osx-64.zip
            MegaMan2Randomizer2-linux-x64.zip
            MegaMan2Randomizer2-win-x64.zip